version: "3"

services:
  redis_db:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - pnt_network

  admin_microservice:
    build:
      context: ./microservices/admin_service
      dockerfile: Dockerfile
    ports:
      - "8001"
    depends_on:
      - db_auth
      - redis_db
      - auth_microservice
    volumes:
      - ./microservices/admin_service:/code

    environment:
      - DB_HOST=db_auth
      - DB_NAME=auth_database
      - DB_USER=auth_user
      - DB_PASSWORD=auth_password
      - CELERY_BROKER_URL=redis://redis_db:6379/1
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/1
      - FRONTEND_PASSWORD_CONFIRMATION_URL=https://transparencia.ec/auth/reset-password/:token
      - FRONTEND_ACTIVATE_ACCOUNT_URL=https://transparencia.ec/auth/activate-account/:uidb64/:token
      - REDIS_HOST = redis_db
      - REDIS_PORT = 6379
      - REDIS_DB = 0

    networks:
      - pnt_network
  auth_microservice:
    build:
      context: ./microservices/auth_service
      dockerfile: Dockerfile
    ports:
      - "8000"
    depends_on:
      - db_auth
      - redis_db
    volumes:
      - ./microservices/auth_service:/code

    environment:
      - DB_HOST=db_auth
      - DB_NAME=auth_database
      - DB_USER=auth_user
      - DB_PASSWORD=auth_password
      - CELERY_BROKER_URL=redis://redis_db:6379/1
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/1
      - REDIS_HOST = redis_db
      - REDIS_PORT = 6379
      - REDIS_DB = 0

    networks:
      - pnt_network

  entity_microservice:
    build:
      context: ./microservices/entities_service
      dockerfile: Dockerfile
    ports:
      - "8000"
    depends_on:
      - db_auth
      - redis_db
    volumes:
      - ./microservices/entities_service:/code
      - shared_media:/code/media
    networks:
      - pnt_network
    environment:
      - DB_HOST=db_auth
      - DB_NAME=auth_database
      - DB_USER=auth_user
      - DB_PASSWORD=auth_password
      - CELERY_BROKER_URL=redis://redis_db:6379/1
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/1
      - REDIS_HOST = redis_db
      - REDIS_PORT = 6379
      - REDIS_DB = 0
  #public_micorservice:
  #  build:
  #    context: ./microservices/public_api_service
  #    dockerfile: Dockerfile
  #  ports:
  #    - "8003:8000"
  #  depends_on:
  #    - mongo_db
  #    - redis_db
  #  volumes:
  #    - ./microservices/public_api_service:/code
  #    - shared_media:/code/media
  #  environment:
  #    - CELERY_BROKER_URL=redis://redis_db:6379/2
  #    - CELERY_RESULT_BACKEND=redis://redis_db:6379/2
  #    - REDIS_HOST=redis_db
  #    - REDIS_PORT=6379
  #    - REDIS_DB=0
  #    - MONGO_DB_HOST=mongo_db
  #    - MONGO_DB_PORT=27017
  #    - MONGO_DB_USERNAME=root
  #    - MONGO_DB_PASSWORD=rootpassword
  #    - MONGO_DB_NAME=public_api_service
  #    - DB_HOST=db_auth
  #    - DB_NAME=auth_database
  #    - DB_USER=auth_user
  #    - DB_PASSWORD=auth_password

  #  networks:
  #    - pnt_network

  db_auth:
    image: postgres:latest
    environment:
      POSTGRES_DB: auth_database
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password

    networks:
      - pnt_network

  mongo_db:
    image: mongo:latest
    networks:
      - pnt_network
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

  api_gateway:
    image: nginx:latest
    ports:
      - "8082:80"
    volumes:
      - ./api-gateway/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./microservices/auth_service/static:/usr/src/app/static/
    depends_on:
      - auth_microservice
      - admin_microservice
    networks:
      - pnt_network

volumes:
  auth_microservice:
  admin_microservice:
  public_micorservice:
  shared_media:
    driver: local
networks:
  pnt_network:
    driver: bridge
