services:
  redis_db:
    image: redis:7.4
    restart: always
    ports:
      - "6379:6379"
    networks:
      - pnt_network
    volumes:
      - ./data/redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf

  admin_microservice:
    build:
      context: ./microservices/admin_service
      dockerfile: Dockerfile
    ports:
      - "8001"
    depends_on:
      - postgres_db
      - redis_db
      - auth_microservice
    volumes:
      - ./microservices/admin_service:/code
    restart: always
    environment:
      - DB_HOST=postgres_db
      - DB_NAME=pnt_db
      - DB_USER=${POSTGRES_DB_USER}
      - DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - CELERY_BROKER_URL=redis://redis_db:6379/3
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/3
      - FRONTEND_PASSWORD_CONFIRMATION_URL=https://transparencia.dpe.gob.ec/auth/reset-password/:token
      - FRONTEND_ACTIVATE_ACCOUNT_URL=https://transparencia.dpe.gob.ec/auth/activate-account/:uidb64/:token
      - REDIS_HOST=redis_db
      - REDIS_PORT=6379
      - REDIS_DB=0
    networks:
      - pnt_network

  auth_microservice:
    build:
      context: ./microservices/auth_service
      dockerfile: Dockerfile
    ports:
      - "8000"
    depends_on:
      - postgres_db
      - redis_db
    volumes:
      - ./microservices/auth_service:/code
    restart: always
    environment:
      - DB_HOST=postgres_db
      - DB_NAME=pnt_db
      - DB_USER=${POSTGRES_DB_USER}
      - DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - CELERY_BROKER_URL=redis://redis_db:6379/4
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/4
      - REDIS_HOST=redis_db
      - REDIS_PORT=6379
      - REDIS_DB=0
    networks:
      - pnt_network

  entity_microservice:
    build:
      context: ./microservices/entities_service
      dockerfile: Dockerfile
    ports:
      - "8000"
    depends_on:
      - postgres_db
      - redis_db
    restart: always
    volumes:
      - ./microservices/entities_service:/code
      - ./data/shared_media:/code/media
    networks:
      - pnt_network
    environment:
      - DB_HOST=postgres_db
      - DB_NAME=pnt_db
      - DB_USER=${POSTGRES_DB_USER}
      - DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - CELERY_BROKER_URL=redis://redis_db:6379/1
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/1
      - REDIS_HOST=redis_db
      - REDIS_PORT=6379
      - REDIS_DB=0

  public_microservice:
    build:
      context: ./microservices/public_api_service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    depends_on:
      - mongo_db
      - redis_db
    restart: always
    volumes:
      - ./microservices/public_api_service:/code
      - ./data/shared_media:/code/media
    environment:
      - CELERY_BROKER_URL=redis://redis_db:6379/2
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/2
      - REDIS_HOST=redis_db
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MONGO_DB_HOST=mongo_db
      - MONGO_DB_PORT=27017
      - MONGO_DB_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGO_DB_NAME=public_api_service
      - DB_HOST=postgres_db
      - DB_NAME=pnt_db
      - DB_USER=${POSTGRES_DB_USER}
      - DB_PASSWORD=${POSTGRES_DB_PASSWORD}
    networks:
      - pnt_network

  postgres_db:
    image: postgres:16.4
    restart: always
    environment:
      POSTGRES_DB: pnt_db
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    networks:
      - pnt_network

  mongo_db:
    image: mongo:7.0
    networks:
      - pnt_network
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo_data:/data/db
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    environment:
      MONGO_INITDB_ROOT_DATABASE: public_api_service
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}

  api_gateway:
    image: nginx:1.27
    restart: always
    ports:
      - "8082:80"
    volumes:
      - ./api-gateway/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./microservices/auth_service/static:/usr/src/app/static/
    depends_on:
      - auth_microservice
      - admin_microservice
      - entity_microservice
      - public_microservice
    networks:
      - pnt_network

networks:
  pnt_network:
    driver: bridge
